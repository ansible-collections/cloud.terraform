name: Integration tests

on:
  pull_request_target:
    types:
      - opened
      - reopened
      - labeled
      - unlabeled
      - synchronize
    branches:
      - main
      - stable-*

jobs:
  safe-to-test:
    if: ${{ github.event.label.name == 'safe to test' }} || ${{ github.event.action != 'labeled' }}
    uses: ansible-network/github_actions/.github/workflows/safe-to-test.yml@main

  integration-tests:
    needs:
      - safe-to-test
    runs-on: ubuntu-latest
    env:
      source: "./source"
      aws_dir: "./amazon_aws"
    steps:
      - name: Checkout collection
        uses: actions/checkout@v4
        with:
          path: ${{ env.source }}
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Pre install collections dependencies first so the collection install does not
        run: >-
          ansible-galaxy collection install
          --pre "-r${{ env.source }}/tests/integration/requirements.yml"
          -p /home/runner/collections/
        shell: bash

      - name: Build and install collection
        id: install-collection
        uses: ansible-network/github_actions/.github/actions/build_install_collection@main
        with:
          install_python_dependencies: true
          source_path: ${{ env.source }}

      - name: Download terraform binary
        run: >-
          curl
          -o terraform.zip
          https://releases.hashicorp.com/terraform/1.6.3/terraform_1.6.3_linux_amd64.zip
        shell: bash

      - name: Install terraform binary
        run: |-
          zcat terraform.zip > terraform
          chmod +x terraform
          sudo mv terraform /usr/bin
          terraform -v
        shell: bash

      - name: Create AWS/sts session credentials
        uses: ansible-network/github_actions/.github/actions/ansible_aws_test_provider@main
        with:
          collection_path: ${{ steps.install-collection.outputs.collection_path }}
          ansible_core_ci_key: ${{ secrets.ANSIBLE_CORE_CI_KEY }}

      # we use raw git to create a repository in the tests
      # this fails if the committer doesn't have a name and an email set
      - name: Set up git
        run: |
          git config --global user.email gha@localhost
          git config --global user.name "Github Actions"
        shell: bash

      - name: Run integration tests
        uses: ansible-network/github_actions/.github/actions/ansible_test_integration@main
        with:
          collection_path: ${{ steps.install-collection.outputs.collection_path }}
          python_version: "3.12"
          ansible_version: milestone
